name: Android Release

on:
  workflow_dispatch:
    inputs:
      versionName:
        description: 'Version name (optional, for tagging)'
        required: false
      versionCode:
        description: 'Version code override (optional)'
        required: false

jobs:
  build-release:
    runs-on: ubuntu-latest
    env:
      RELEASE_STORE_PASSWORD: ${{ secrets.RELEASE_STORE_PASSWORD }}
      RELEASE_KEY_ALIAS: ${{ secrets.RELEASE_KEY_ALIAS }}
      RELEASE_KEY_PASSWORD: ${{ secrets.RELEASE_KEY_PASSWORD }}
      RELEASE_STORE_FILE: ${{ github.workspace }}/release-keystore.jks
      VERSION_NAME: ${{ github.event.inputs.versionName }}
      VERSION_CODE: ${{ github.event.inputs.versionCode }}
      ANDROID_KEYSTORE_BASE64: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Set up JDK 17
        uses: actions/setup-java@v5
        with:
          distribution: temurin
          java-version: '17'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v5

      - name: Decode and write release keystore
        if: ${{ env.ANDROID_KEYSTORE_BASE64 != '' }}
        shell: bash
        run: |
          echo "$ANDROID_KEYSTORE_BASE64" | base64 -d > "$RELEASE_STORE_FILE"

      - name: Create google-services.json from secrets
        shell: bash
        env:
          FIREBASE_PROJECT_NUMBER: ${{ secrets.FIREBASE_PROJECT_NUMBER }}
          FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
          FIREBASE_STORAGE_BUCKET: ${{ secrets.FIREBASE_STORAGE_BUCKET }}
          FIREBASE_ANDROID_APP_ID: ${{ secrets.FIREBASE_ANDROID_APP_ID }}
          FIREBASE_ANDROID_API_KEY: ${{ secrets.FIREBASE_ANDROID_API_KEY }}
        run: |
          cat > composeApp/google-services.json << EOF
          {
            "project_info": {
              "project_number": "$FIREBASE_PROJECT_NUMBER",
              "project_id": "$FIREBASE_PROJECT_ID",
              "storage_bucket": "$FIREBASE_STORAGE_BUCKET"
            },
            "client": [
              {
                "client_info": {
                  "mobilesdk_app_id": "$FIREBASE_ANDROID_APP_ID",
                  "android_client_info": {
                    "package_name": "net.thevenot.comwatt"
                  }
                },
                "oauth_client": [],
                "api_key": [
                  {
                    "current_key": "$FIREBASE_ANDROID_API_KEY"
                  }
                ],
                "services": {
                  "appinvite_service": {
                    "other_platform_oauth_client": []
                  }
                }
              }
            ],
            "configuration_version": "1"
          }
          EOF

      - name: Fail workflow if keystore secret is missing
        if: ${{ env.ANDROID_KEYSTORE_BASE64 == '' }}
        shell: bash
        run: |
          echo "Error: ANDROID_KEYSTORE_BASE64 secret is missing. Cannot proceed with an unsigned release."
          exit 1

      - name: Build signed AAB
        run: ./gradlew --no-daemon :composeApp:bundleRelease

      - name: Upload AAB/APK artifacts
        uses: actions/upload-artifact@v4
        with:
          name: android-release-artifacts
          path: |
            composeApp/build/outputs/**/*.aab
            composeApp/build/outputs/**/*.apk
          if-no-files-found: error

      - name: Upload R8 mapping file
        uses: actions/upload-artifact@v4
        with:
          name: android-mapping
          path: composeApp/build/outputs/mapping/release/mapping.txt
          if-no-files-found: warn